name: Release & Docker

on:
  push:
    tags: ["v*"]

permissions:
  contents: read
  packages: write
  id-token: write
  attestations: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: egalitarianmonkey/hometube

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-3.11-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-3.11-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[test,dev]"

      - name: Lint
        run: |
          python -m black --check app/ tests/
          python -m ruff check app/ tests/

      - name: Tests
        run: python -m pytest tests/ -v --tb=short -m "not slow and not external and not network"

  prepare-release-metadata:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title=HomeTube
            org.opencontainers.image.description=Universal Video Downloader for HomeLab
            org.opencontainers.image.version=${{ github.ref_name }}

  docker:
    needs: prepare-release-metadata
    uses: ./.github/workflows/build-image.yml
    with:
      platforms: "linux/amd64,linux/arm64"
      push: true
      tags: ${{ needs.prepare-release-metadata.outputs.tags }}
      labels: ${{ needs.prepare-release-metadata.outputs.labels }}
      cache-key: "release"

  release:
    needs: [test, docker]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref_name, '-') }}
